name: Windows
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron:  '0 12 * * 0'

jobs:
  build:
    name: ${{ matrix.app }}-${{ matrix.configuration }}-build
    runs-on: windows-latest
    strategy:
      matrix:
        app: [boinc-autodock-vina]
        configuration: [x64-windows-static, x86-windows-static]
      fail-fast: false
    env:
      VCPKG_BINARY_SOURCES: 'clear;files,${{ github.workspace }}\vcpkgcache\,readwrite'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Setup msbuild
        uses: microsoft/setup-msbuild@v1

      - name: Fix vcpkg
        run: vcpkg.exe integrate remove

      - name: Configure Python
        if: ${{ success() }}
        shell: cmd
        run: |
          pip install boto3

      - name: Download vcpkg binary cache
        if: ${{ success() }}
        shell: cmd
        run: |
          python deploy\manage_vcpkg_archive_cache.py download ${{ github.workspace }}\vcpkgcache ${{ matrix.configuration }} "vcpkg.cache.boinc-apps.${{ matrix.app }}"

      - name: Build and Test
        run: python build.py -ts=ci -t=${{ matrix.configuration }} ${{ matrix.app }}

      - name: Upload artifacts
        if: ${{ success()}}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.app }}-${{ matrix.configuration }}-${{ github.event.pull_request.head.sha }}
          path: build/${{ matrix.app }}/${{ matrix.configuration }}/Release/*.exe

      - name: Upload vcpkg binary cache
        if: ${{ success() }}
        shell: cmd
        env:
          ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
        run: |
          python deploy\manage_vcpkg_archive_cache.py upload ${{ github.workspace }}\vcpkgcache ${{ matrix.configuration }} "vcpkg.cache.boinc-apps.${{ matrix.app }}" "%ACCESS_KEY%" "%SECRET_KEY%"
